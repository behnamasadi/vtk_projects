cmake_minimum_required(VERSION 3.15 FATAL_ERROR)
project(vtk_projects)

#if(NOT "${CMAKE_GENERATOR}" STREQUAL "Ninja Multi-Config")
#	# message(WARNING "It's recommended to use -G \"Ninja Multi-Config\" for this project.")
#	# OR, if you want to force-stop the configuration:
#	message(FATAL_ERROR "Please use cmake -S . -G \"Ninja Multi-Config\" -B build for this project.")
#endif()

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++2a")

find_package(Boost COMPONENTS filesystem system REQUIRED)



message("###################### QT #####################")

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Qml Quick Widgets Gui QuickControls2 Xml Sql PrintSupport Svg Network Concurrent)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Qml Quick Widgets Gui QuickControls2 Xml Sql PrintSupport Svg Network Concurrent)

message(STATUS "QT version: " ${QT_VERSION_MAJOR}.${QT_VERSION_MINOR})
message(STATUS "QT dir" ${Qt${QT_VERSION_MAJOR}_DIR})



message("###################### VTK #####################")


include(FetchContent)

# Fetch VTK
FetchContent_Declare(
  vtk
  GIT_REPOSITORY https://gitlab.kitware.com/vtk/vtk.git
  GIT_TAG        v9.2.0 # Adjust the tag as needed
)

FetchContent_GetProperties(vtk)
if(NOT vtk_POPULATED)
  FetchContent_Populate(vtk)
  
  # Set custom options for VTK configuration
  set(VTK_REPORT_OPENGL_ERRORS OFF CACHE BOOL "Disable OpenGL error reporting" FORCE)
  set(VTK_MODULE_ENABLE_VTK_GUISupportQt YES CACHE BOOL "Enable VTK Qt GUI support" FORCE)
  set(VTK_MODULE_ENABLE_VTK_GUISupportQtQuick YES CACHE BOOL "Enable VTK QtQuick support" FORCE)
  set(VTK_WRAP_JAVA OFF CACHE BOOL "Disable VTK Java wrapping" FORCE)
  set(VTK_WRAP_PYTHON OFF CACHE BOOL "Disable VTK Python wrapping" FORCE)
  set(VTK_ENABLE_WRAPPING OFF CACHE BOOL "Disable all VTK wrapping" FORCE)
  set(VTK_BUILD_TESTING OFF CACHE BOOL "Disable VTK testing" FORCE)
  set(VTK_GROUP_ENABLE_Rendering DONT_WANT CACHE STRING "Disable VTK rendering" FORCE)
  set(VTK_MODULE_ENABLE_VTK_RenderingQt YES CACHE BOOL "Enable VTK Qt rendering" FORCE)
  set(VTK_MODULE_ENABLE_VTK_hdf5 YES CACHE BOOL "Enable VTK HDF support" FORCE)
  set(VTK_MODULE_ENABLE_VTK_IOHDF YES CACHE BOOL "Enable VTK HDF I/O support" FORCE)
  set(VTK_MODULE_ENABLE_VTK_InteractionImage YES CACHE BOOL "Enable VTK image interaction" FORCE)
  set(VTK_MODULE_ENABLE_VTK_RenderingLOD YES CACHE BOOL "Enable VTK Level of Detail rendering" FORCE)
  set(VTK_MODULE_ENABLE_VTK_ViewsCore YES CACHE BOOL "Enable VTK core views" FORCE)
  set(VTK_MODULE_ENABLE_VTK_ViewsContext2D YES CACHE BOOL "Enable VTK 2D context views" FORCE)
  set(VTK_MODULE_ENABLE_VTK_RenderingContextOpenGL2 YES CACHE BOOL "Enable VTK OpenGL2 rendering context" FORCE)

  add_subdirectory(${vtk_SOURCE_DIR} ${vtk_BINARY_DIR})
endif()




#add_executable(vtk_demo src/vtk_demo.cpp)
#target_link_libraries(vtk_demo PRIVATE ${VTK_LIBRARIES})
#vtk_module_autoinit(TARGETS vtk_demo MODULES ${VTK_LIBRARIES})
#target_link_libraries(vtk_demo PRIVATE VTK::CommonCore VTK::RenderingOpenGL2 VTK::GUISupportQt VTK::ImagingHybrid VTK::IOImage VTK::FiltersGeneral VTK::FiltersSources VTK::InteractionStyle VTK::RenderingOpenGL2 VTK::CommonDataModel VTK::CommonColor)


